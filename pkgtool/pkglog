#!/bin/sh

# EXIT STATUS 92 = Cannot create '/tmp/...' directory

TMP=$(mktemp -d /tmp/XXXXXXXX) || { echo "Cannot create '/tmp/...' directory" ; exit 92; }
trap "rm -rf $TMP" EXIT


pkginfo=$1
shift
TARGET_DIR_NAME=$1

pkginfo_src_dir="`dirname $pkginfo`"

usage() {
  echo ""
  echo "Usage: $0 .PKGINFO [DESTDIR]"
  echo ""
}

get_info() {
  . $pkginfo
}

if [ "$pkginfo" = "" ]; then
  usage
  exit 1
fi

get_info

if [ "$TARGET_DIR_NAME" = "" ]; then
  TARGET_DIR_NAME="."
fi

if [ "$pkgname" = "" -o "$pkgver" = "" -o "$arch" = "" -o "$distroname" = "" -o "$distrover" = "" ]; then
  echo "ERROR: The file './.PKGINFO' should contains the declarations"
  echo "       of following variables:"
  echo "  pkgname    - name of package;"
  echo "  pkgver     - version such as 1.0.4, for example;"
  echo "  arch       - architecture of target machine {x86_64|i686|mipsel|arm|...};"
  echo "  distroname - name of distributive {slamd64|...};"
  echo "  distrover  - distributive version {12.2|...}"
  echo ""
  echo "Also optional variables are available:"
  echo "  group      - package group name {applications|libs|...};"
  echo "  url        - package home site. http://www.pkg.com, for example;"
  echo "  license    - LICENSE type {GPL|LGPL|BSD|Proprietary}."
  echo ""
  usage
  exit 1
fi

if [ ! -r "$pkginfo_src_dir/.INSTALL" -o ! -r "$pkginfo_src_dir/.FILELIST" ]; then
  echo "ERROR: The current directory should contains following files:"
  echo "  .INSTALL   - installation script;"
  echo "  .FILELIST  - list of presented files in the created package."
  echo ""
  echo "It seems like that package is not created yet."
  echo ""
  usage
  exit 1
fi

strip_description() {
  outfile=$1
  infile="$pkginfo_src_dir/.DESCRIPTION"
  > $outfile
  LINENUMS="`cat $infile | grep -n -e "$pkgname" | cut -f 1 -d ':'`"
  if [ "$LINENUMS" = "" ]; then
    echo "WARNING: Description is empty or corrupted."
    return
  fi
  for LINENUM in $LINENUMS ; do
     LINE="`sed -n "$LINENUM p" $infile`"
     echo "$LINE" >> $outfile
  done
}


logfile="$pkgname-$pkgver-$arch-$distroname-$distrover"

echo
echo "Creating Install log file $logfile..."

echo "PACKAGE NAME: $pkgname"                   > $logfile
echo "PACKAGE VERSION: $pkgver"                >> $logfile
echo "ARCH: $arch"                             >> $logfile
echo "DISTRO: $distroname"                     >> $logfile
echo "DISTRO VERSION: $distrover"              >> $logfile
if [ ! "$group" = "" ]; then
echo "GROUP: $group"                           >> $logfile
fi
if [ ! "$url" = "" ]; then
  echo "URL: $url"                             >> $logfile
fi
if [ ! "$license" = "" ]; then
  echo "LICENSE: $license"                     >> $logfile
fi
if [ ! "$uncompressed_size" = "" ]; then
  echo "UNCOMPRESSED SIZE: $uncompressed_size" >> $logfile
fi
if [ ! "$total_files" = "" ]; then
  echo "TOTAL FILES: $total_files"             >> $logfile
fi
echo "REFERENCE COUNTER: 0"                    >> $logfile
if [ -f "$pkginfo_src_dir/.REQUIRES" ]; then
  echo "REQUIRES:"                             >> $logfile
  cat $pkginfo_src_dir/.REQUIRES               >> $logfile
fi
if [ -f "$pkginfo_src_dir/.DESCRIPTION" ]; then
  strip_description $TMP/description$$
  echo "PACKAGE DESCRIPTION:"                  >> $logfile
  cat $TMP/description$$                       >> $logfile
  rm -f $TMP/description$$
fi
echo "RESTORE LINKS:"                          >> $logfile
if [ -f "$pkginfo_src_dir/.RESTORELINKS" ]; then
  cat $pkginfo_src_dir/.RESTORELINKS           >> $logfile
fi
if [ ! -f "$pkginfo_src_dir/.INSTALL" ]; then
  echo "ERROR: Install script '.INSTALL' is not present."
  exit 1
fi
echo "INSTALL SCRIPT:"                         >> $logfile
cat $pkginfo_src_dir/.INSTALL                  >> $logfile
if [ ! -f "$pkginfo_src_dir/.FILELIST" ]; then
  echo "ERROR: File list '.FILELIST' is not present."
  exit 1
fi
echo "FILE LIST:"                              >> $logfile
cat $pkginfo_src_dir/.FILELIST                 >> $logfile

if [ ! "$TARGET_DIR_NAME" = "." ]; then
  # $TMP/errmsg$$ - is a unique temporary file
  mkdir -p "$TARGET_DIR_NAME" 2> $TMP/errmsg$$
  if [ "$?" = "1" ]; then
    echo
    echo "ERROR: `cat $TMP/errmsg$$`"
    echo "Find the $logfile in the current directory."
    echo
    exit 1
  fi
  echo
  echo "Moving $logfile to $TARGET_DIR_NAME directory..."
  mv $logfile $TARGET_DIR_NAME
fi
echo
echo "Install log file creation complete."
echo
