#!/bin/sh

# 17 = exit if called with no arguments
# 26 = Destination directory has not specified
EXITSTATUS=0

usage() {
  echo
  echo "Usage: $0 [--dest dir] operation pkglogfile"
  echo
  echo "Where the following operations are available:"
  echo "  filelist       - creates .FILELIST"
  echo "  restore_links  - creates .RESTORELINKS"
  echo "  install_script - creates .INSTALL"
  echo "  requires       - creates .REQUIRES"
  echo "  description    - creates .DESCRIPTION"
  echo "  pkginfo        - creates .PKGINFO"
  echo
}

DEST_DIR=. # current dir by default
while [ 0 ]; do
  if [ "$1" = "-h" -o "$1" = "--help" ]; then
    usage
    exit 0
  elif [ "$1" = "--dest" ]; then
    if [ "$2" = "" ]; then
      usage
      echo "ERROR: Destination directory has not specified. Check --dest option."
      EXITSTATUS=26
      exit $EXITSTATUS
    fi
    DEST_DIR="$2"
    shift 2
  else
    break
  fi
done

#
# usage(), exit if called with no arguments:
#
if [ $# = 0 ]; then
  usage
  echo "ERROR: arguments were not specified. Check options."
  EXITSTATUS=17
  exit $EXITSTATUS
fi


filelist() {
  logfile=$1
  outfile="$DEST_DIR/.FILELIST"
  LINENUM="`cat $logfile | grep -n -e "FILE LIST:" | cut -f 1 -d ':'`"
  if [ "$LINENUM" = "" ]; then
    echo "File list is not present."
    exit 1
  fi
  let LINENUM+=1
  COUNT=1
  # zero lenght file:
  > $outfile
  LINE="`sed -n "$LINENUM p" $logfile`"
  let LINENUM+=1
  let COUNT+=1
  while [ ! "$LINE" = "" ]; do
    echo "$LINE" >> $outfile
    LINE="`sed -n "$LINENUM p" $logfile`"
    let LINENUM+=1
    let COUNT+=1
  done
}

install_script() {
  logfile=$1
  outfile="$DEST_DIR/.INSTALL"
  START_LINE="`cat $logfile | grep -n -e "INSTALL SCRIPT:" | cut -f 1 -d ':'`"
  let START_LINE+=1
  STOP_LINE="`cat $logfile | grep -n -e "FILE LIST:" | cut -f 1 -d ':'`"
  let STOP_LINE+=1
  if [ "$START_LINE" = "" -o "$START_LINE" = "$STOP_LINE" ]; then
    echo "Install script is not present."
    exit 1
  fi
  if [ "$STOP_LINE" = "" ]; then
    echo "File list is not present."
    exit 1
  fi
  LINENUM="$START_LINE"
  COUNT=1
  # zero lenght file:
  > $outfile
  LINE="`sed -n "$LINENUM p" $logfile`"
  let LINENUM+=1
  let COUNT+=1
  while [ ! "$LINENUM" = "$STOP_LINE" ]; do
    echo "$LINE" >> $outfile
    LINE="`sed -n "$LINENUM p" $logfile`"
    let LINENUM+=1
    let COUNT+=1
  done
  chmod a+x $outfile
}

restore_links() {
  logfile=$1
  outfile="$DEST_DIR/.RESTORELINKS"
  START_LINE="`cat $logfile | grep -n -e "RESTORE LINKS:" | cut -f 1 -d ':'`"
  let START_LINE+=1
  STOP_LINE="`cat $logfile | grep -n -e "INSTALL SCRIPT:" | cut -f 1 -d ':'`"
  let STOP_LINE+=1
  if [ "$START_LINE" = "" -o "$START_LINE" = "$STOP_LINE" ]; then
    echo "Install script is not present."
    exit 1
  fi
  if [ "$STOP_LINE" = "" ]; then
    echo "File list is not present."
    exit 1
  fi
  LINENUM="$START_LINE"
  COUNT=1
  # zero lenght file:
  > $outfile
  LINE="`sed -n "$LINENUM p" $logfile`"
  let LINENUM+=1
  let COUNT+=1
  while [ ! "$LINENUM" = "$STOP_LINE" ]; do
    echo "$LINE" >> $outfile
    LINE="`sed -n "$LINENUM p" $logfile`"
    let LINENUM+=1
    let COUNT+=1
  done
}

description() {
  logfile=$1
  outfile="$DEST_DIR/.DESCRIPTION"
  START_LINE="`cat $logfile | grep -n -e "PACKAGE DESCRIPTION:" | cut -f 1 -d ':'`"
  let START_LINE+=1
  STOP_LINE="`cat $logfile | grep -n -e "RESTORE LINKS:" | cut -f 1 -d ':'`"
  let STOP_LINE+=1
  if [ "$START_LINE" = "" -o "$START_LINE" = "$STOP_LINE" ]; then
    echo "Description is not present."
    exit 0
  fi
  if [ "$STOP_LINE" = "" ]; then
    echo "Install script is not present."
    exit 0
  fi
  LINENUM="$START_LINE"
  COUNT=1
  # zero lenght file:
  > $outfile
  LINE="`sed -n "$LINENUM p" $logfile`"
  let LINENUM+=1
  let COUNT+=1
  while [ ! "$LINENUM" = "$STOP_LINE" ]; do
    echo "$LINE" >> $outfile
    LINE="`sed -n "$LINENUM p" $logfile`"
    let LINENUM+=1
    let COUNT+=1
  done
}

requires() {
  logfile=$1
  outfile="$DEST_DIR/.REQUIRES"
  START_LINE="`cat $logfile | grep -n -e "REQUIRES:" | cut -f 1 -d ':'`"
  let START_LINE+=1
  STOP_LINE="`cat $logfile | grep -n -e "PACKAGE DESCRIPTION:" | cut -f 1 -d ':'`"
  let STOP_LINE+=1
  if [ "$START_LINE" = "" -o "$START_LINE" = "$STOP_LINE" ]; then
    echo "Install script is not present."
    exit 0
  fi
  if [ "$STOP_LINE" = "" ]; then
    echo "File list is not present."
    exit 0
  fi
  LINENUM="$START_LINE"
  COUNT=1
  # zero lenght file:
  > $outfile
  LINE="`sed -n "$LINENUM p" $logfile`"
  let LINENUM+=1
  let COUNT+=1
  while [ ! "$LINENUM" = "$STOP_LINE" ]; do
    echo "$LINE" >> $outfile
    LINE="`sed -n "$LINENUM p" $logfile`"
    let LINENUM+=1
    let COUNT+=1
  done
}

references() {
  logfile=$1
  outfile="$DEST_DIR/.REFERENCES"
  START_LINE="`cat $logfile | grep -n -e "REFERENCE COUNTER:" | cut -f 1 -d ':'`"
  let START_LINE+=1
  STOP_LINE="`cat $logfile | grep -n -e "REQUIRES:" | cut -f 1 -d ':'`"
  let STOP_LINE+=1
  if [ "$START_LINE" = "" -o "$START_LINE" = "$STOP_LINE" ]; then
    echo "Install script is not present."
    exit 0
  fi
  if [ "$STOP_LINE" = "" ]; then
    echo "File list is not present."
    exit 0
  fi
  LINENUM="$START_LINE"
  COUNT=1
  # zero lenght file:
  > $outfile
  LINE="`sed -n "$LINENUM p" $logfile`"
  let LINENUM+=1
  let COUNT+=1
  while [ ! "$LINENUM" = "$STOP_LINE" ]; do
    echo "$LINE" >> $outfile
    LINE="`sed -n "$LINENUM p" $logfile`"
    let LINENUM+=1
    let COUNT+=1
  done
}

pkginfo() {
  logfile=$1
  outfile="$DEST_DIR/.PKGINFO"
  LINENUM_PN="`cat $logfile | grep -n -e "PACKAGE NAME:" | cut -f 1 -d ':'`"
  if [ "$LINENUM_PN" = "" ]; then
    echo "ERROR: There is no PACKAGE NAME."
    exit 1
  fi
  LINENUM_PV="`cat $logfile | grep -n -e "PACKAGE VERSION:" | cut -f 1 -d ':'`"
  if [ "$LINENUM_PV" = "" ]; then
    echo "ERROR: There is no PACKAGE VERSION."
    exit 1
  fi
  LINENUM_A="`cat $logfile | grep -n -e "ARCH:" | cut -f 1 -d ':'`"
  if [ "$LINENUM_A" = "" ]; then
    echo "ERROR: There is no ARCH definition."
    exit 1
  fi
  LINENUM_DN="`cat $logfile | grep -n -e "DISTRO:" | cut -f 1 -d ':'`"
  if [ "$LINENUM_DN" = "" ]; then
    echo "ERROR: There is no DISTRIBUTION NAME."
    exit 1
  fi
  LINENUM_DV="`cat $logfile | grep -n -e "DISTRO VERSION:" | cut -f 1 -d ':'`"
  if [ "$LINENUM_DN" = "" ]; then
    echo "ERROR: There is no DISTRIBUTION VERSION."
    exit 1
  fi
  LINENUM_GR="`cat $logfile | grep -n -e "GROUP:" | cut -f 1 -d ':'`"
  if [ "$LINENUM_GR" = "" ]; then
    echo "WARNING: There is no GROUP definition."
  fi
  LINENUM_URL="`cat $logfile | grep -n -e "URL:" | cut -f 1 -d ':'`"
  if [ "$LINENUM_URL" = "" ]; then
    echo "WARNING: There is no URL definition."
  fi
  LINENUM_L="`cat $logfile | grep -n -e "LICENSE:" | cut -f 1 -d ':'`"
  if [ "$LINENUM_L" = "" ]; then
    echo "WARNING: There is no LICENSE definition."
  fi
  LINENUM_UZ="`cat $logfile | grep -n -e "UNCOMPRESSED SIZE:" | cut -f 1 -d ':'`"
  if [ "$LINENUM_UZ" = "" ]; then
    echo "WARNING: There is no UNCOMPRESSED SIZE definition."
  fi
  LINENUM_TF="`cat $logfile | grep -n -e "TOTAL FILES:" | cut -f 1 -d ':'`"
  if [ "$LINENUM_TF" = "" ]; then
    echo "WARNING: There is no TOTAL numer of FILES."
  fi

  # zero lenght file:
  > $outfile

  LINE="`sed -n "$LINENUM_PN p" $logfile`"
  pkgname="`echo "$LINE" | sed -e 's/^PACKAGE NAME: //'`"
  echo "pkgname=$pkgname" >> $outfile

  LINE="`sed -n "$LINENUM_PV p" $logfile`"
  pkgver="`echo "$LINE" | sed -e 's/^PACKAGE VERSION: //'`"
  echo "pkgver=$pkgver" >> $outfile

  LINE="`sed -n "$LINENUM_A p" $logfile`"
  arch="`echo "$LINE" | sed -e 's/^ARCH: //'`"
  echo "arch=$arch" >> $outfile

  LINE="`sed -n "$LINENUM_DN p" $logfile`"
  distroname="`echo "$LINE" | sed -e 's/^DISTRO: //'`"
  echo "distroname=$distroname" >> $outfile

  LINE="`sed -n "$LINENUM_DV p" $logfile`"
  distrover="`echo "$LINE" | sed -e 's/^DISTRO VERSION: //'`"
  echo "distrover=$distrover" >> $outfile

  if [ ! "$LINENUM_GR" = "" ]; then
    LINE="`sed -n "$LINENUM_GR p" $logfile`"
    group="`echo "$LINE" | sed -e 's/^GROUP: //'`"
    echo "group=$group" >> $outfile
  fi
  if [ ! "$LINENUM_URL" = "" ]; then
    LINE="`sed -n "$LINENUM_URL p" $logfile`"
    url="`echo "$LINE" | sed -e 's/^URL: //'`"
    echo "url=$url" >> $outfile
  fi
  if [ ! "$LINENUM_L" = "" ]; then
    LINE="`sed -n "$LINENUM_L p" $logfile`"
    license="`echo "$LINE" | sed -e 's/^LICENSE: //'`"
    echo "license=$license" >> $outfile
  fi
  if [ ! "$LINENUM_UZ" = "" ]; then
    LINE="`sed -n "$LINENUM_UZ p" $logfile`"
    uncompressed_size="`echo "$LINE" | sed -e 's/^UNCOMPRESSED SIZE: //'`"
    echo "uncompressed_size=$uncompressed_size" >> $outfile
  fi
  if [ ! "$LINENUM_TF" = "" ]; then
    LINE="`sed -n "$LINENUM_TF p" $logfile`"
    total_files="`echo "$LINE" | sed -e 's/^TOTAL FILES: //'`"
    echo "total_files=$total_files" >> $outfile
  fi
}


operation=$1
shift

if [ "$operation" = "" ]; then
  usage
  echo "ERROR: operation name is not present in argument list."
  echo
  exit 1
fi

if [ "$1" = "" ]; then
  usage
  echo "ERROR: pkglogfile is not present in argument list."
  echo
  exit 1
fi


$operation $1
